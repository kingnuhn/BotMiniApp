let tg;
try {
  tg = window.Telegram.WebApp;
  tg.expand();
} catch (e) {
  tg = { sendData: (data) => console.log("–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", data) };
}

let currentTimer = null;
let signalEndTime = 0;
let isSignalActive = false;

document.addEventListener("DOMContentLoaded", function() {
  const sendButton = document.getElementById("send");
  
  sendButton.addEventListener("click", function() {
    if (isSignalActive) {
      const now = Math.floor(Date.now() / 1000);
      const remaining = signalEndTime - now;
      alert(`–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â—ë ${remaining} —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞`);
      return;
    }

    const button = this;
    button.disabled = true;
    button.textContent = "üîÑ –ê–Ω–∞–ª–∏–∑...";
    button.classList.add("analyzing");

    setTimeout(() => {
      generateSignal(button);
    }, 2000);
  });

  function generateSignal(button) {
    const timeSelect = document.getElementById("time");
    const duration = getDurationInSeconds(timeSelect.value);
    
    // –§–∏–∫—Å–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª
    const isBuy = Math.random() > 0.5;
    const signalType = isBuy ? "–ü–û–ö–£–ü–ö–ê" : "–ü–†–û–î–ê–ñ–ê";
    const accuracy = (80 + Math.random() * 15).toFixed(2);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateSignalDisplay(signalType, accuracy, isBuy);

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
    startCountdown(button, duration);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    tg.sendData(JSON.stringify({
      instrument: document.getElementById("instrument").value,
      time: timeSelect.value,
      signal: signalType,
      accuracy: `${accuracy}%`,
      duration: duration
    }));

    isSignalActive = true;
  }

  function getDurationInSeconds(timeStr) {
    const times = {
      "1 –º–∏–Ω—É—Ç–∞": 60,
      "5 –º–∏–Ω—É—Ç": 300,
      "15 –º–∏–Ω—É—Ç": 900
    };
    return times[timeStr] || 60;
  }

  function updateSignalDisplay(signalType, accuracy, isBuy) {
    document.getElementById("instrumentDisplay").textContent = 
      document.getElementById("instrument").value;
    document.getElementById("signalType").textContent = signalType;
    document.getElementById("signalType").className = `signal-type ${isBuy ? 'buy' : 'sell'}`;
    document.getElementById("timeDisplay").textContent = 
      document.getElementById("time").value;
    document.getElementById("accuracyDisplay").textContent = `${accuracy}%`;
    
    document.getElementById("loading").style.display = "none";
    document.getElementById("signalResult").style.display = "block";
  }

  function startCountdown(button, duration) {
    button.classList.remove("analyzing");
    button.disabled = false;
    button.classList.add("disabled");
    
    signalEndTime = Math.floor(Date.now() / 1000) + duration;
    let remaining = duration;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    button.style.setProperty('--progress', '100%');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    currentTimer = setInterval(() => {
      remaining--;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
      const progress = (remaining / duration) * 100;
      button.style.setProperty('--progress', `${progress}%`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
      const minutes = Math.floor(remaining / 60);
      const seconds = remaining % 60;
      button.textContent = `üïí ${minutes}:${seconds.toString().padStart(2, '0')}`;
      
      // –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
      if (remaining <= 0) {
        clearInterval(currentTimer);
        resetButton(button);
      }
    }, 1000);
  }

  function resetButton(button) {
    clearInterval(currentTimer);
    button.classList.remove("disabled");
    button.style.removeProperty('--progress');
    button.textContent = "–ü–û–õ–£–ß–ò–¢–¨ –°–ò–ì–ù–ê–õ";
    isSignalActive = false;
    currentTimer = null;
  }
});function adjustLayout() {
    const windowHeight = window.innerHeight;
    const appContainer = document.querySelector('.app-container');
    
    if (windowHeight < 700) {
      appContainer.style.padding = '10px 0';
    } else {
      appContainer.style.padding = '20px';
    }
  }
  
  // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  window.addEventListener('load', adjustLayout);
  window.addEventListener('resize', adjustLayout);
  function adjustLayout() {
    const windowHeight = window.innerHeight;
    const content = document.querySelector('.content-wrapper');
    const bottomBar = document.querySelector('.bottom-bar');
    
    if (windowHeight < 650) {
      content.style.padding = '10px';
      content.style.justifyContent = 'flex-start';
    } else {
      content.style.padding = '20px';
      content.style.justifyContent = 'center';
    }
    
    // –í—Å–µ–≥–¥–∞ –ø—Ä–∏–∂–∏–º–∞–µ–º –ø–æ–ª–æ—Å—É –∫ –Ω–∏–∑—É
    bottomBar.style.bottom = '0';
  }function adaptLayout() {
    const vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (window.innerHeight < 500) {
      document.body.style.padding = '5px';
    } else {
      document.body.style.padding = '10px';
    }
  }
  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Ç–∞—á-—É—Å—Ç—Ä–æ–π—Å—Ç–≤
if (isMobile) {
  document.body.classList.add('touch-device');
  
  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–ø–æ–≤
  document.addEventListener('touchend', function(e) {
    if (e.target.id === 'send') {
      e.preventDefault();
      e.target.click();
    }
    
  }, { passive: false });if (window.Telegram && Telegram.WebApp) {
    // –£—á–µ—Ç –æ–±–ª–∞—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –º–æ–±–∏–ª—å–Ω–æ–º Telegram
    const viewport = document.querySelector('meta[name=viewport]');
    const viewportContent = viewport.getAttribute('content');
    viewport.setAttribute('content', viewportContent + ', viewport-fit=cover');
    
    // –ü–æ–¥—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram
    document.documentElement.style.setProperty('--tg-viewport-height', `${window.innerHeight}px`);
  }
}

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  window.addEventListener('load', adaptLayout);
  window.addEventListener('resize', adaptLayout);
