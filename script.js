let tg;
try {
  tg = window.Telegram.WebApp;
  tg.expand();
} catch (e) {
  tg = { sendData: (data) => console.log("–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", data) };
}

let currentTimer = null;
let signalEndTime = 0;
let isSignalActive = false;

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
function loadTimerState() {
  // –î–æ–∂–∏–¥–∞–µ–º—Å—è, –∫–æ–≥–¥–∞ DOM –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
  if (!document.getElementById("send")) {
    // –ï—Å–ª–∏ DOM –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–π–º–µ—Ä –ø–æ–∑–∂–µ
    setTimeout(loadTimerState, 100);
    return;
  }

  const savedEndTime = localStorage.getItem('signalEndTime');
  const savedSignalData = localStorage.getItem('signalData');
  
  if (savedEndTime) {
    const now = Math.floor(Date.now() / 1000);
    signalEndTime = parseInt(savedEndTime);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —É–∂–µ —Ç–∞–π–º–µ—Ä
    if (signalEndTime > now) {
      isSignalActive = true;
      
      // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
      disableSelects();
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–∏–≥–Ω–∞–ª–µ, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Ö
      if (savedSignalData) {
        try {
          const signalData = JSON.parse(savedSignalData);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞
          updateSignalDisplay(
            signalData.signal, 
            signalData.accuracy.replace('%', ''), 
            signalData.signal === "–ü–û–ö–£–ü–ö–ê"
          );
          
          // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É
          const button = document.getElementById("send");
          
          // –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
          const remainingTime = signalEndTime - now;
          const originalDuration = 60; // 1 –º–∏–Ω—É—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
          
          console.log("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞:", remainingTime, "—Å–µ–∫—É–Ω–¥ –æ—Å—Ç–∞–ª–æ—Å—å");
          
          // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –∫ –∫–Ω–æ–ø–∫–µ
          button.classList.add("disabled");
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
          const progress = (remainingTime / originalDuration) * 100;
          button.style.setProperty('--progress', `${progress}%`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
          const minutes = Math.floor(remainingTime / 60);
          const seconds = remainingTime % 60;
          button.textContent = `üïí ${minutes}:${seconds.toString().padStart(2, '0')}`;
          
          // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä —Å –æ—Å—Ç–∞–≤—à–∏–º—Å—è –≤—Ä–µ–º–µ–Ω–µ–º
          setTimeout(() => {
            startCountdown(button, remainingTime);
          }, 500);
          
        } catch (e) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–∞:", e);
          clearTimerState();
        }
      }
    } else {
      // –ï—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∏—Å—Ç–µ–∫, –æ—á–∏—â–∞–µ–º localStorage
      clearTimerState();
    }
  }
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
function saveTimerState(signalType, accuracy, isBuy, duration) {
  localStorage.setItem('signalEndTime', signalEndTime.toString());
  localStorage.setItem('signalData', JSON.stringify({
    instrument: document.getElementById("instrument").value,
    time: "1 –º–∏–Ω—É—Ç–∞",
    signal: signalType,
    accuracy: `${accuracy}%`,
    isBuy: isBuy
  }));
}

// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
function clearTimerState() {
  console.log("–û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –∏–∑ localStorage");
  localStorage.removeItem('signalEndTime');
  localStorage.removeItem('signalData');
  isSignalActive = false;
  
  // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
  enableSelects();
  
  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
  const button = document.getElementById("send");
  if (button) {
    resetButton(button);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
function disableSelects() {
  const instrumentSelect = document.getElementById("instrument");
  const timeSelect = document.getElementById("time");
  
  if (instrumentSelect) {
    instrumentSelect.disabled = true;
    instrumentSelect.classList.add("disabled-select");
  }
  
  if (timeSelect) {
    timeSelect.disabled = true;
    timeSelect.classList.add("disabled-select");
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
function enableSelects() {
  const instrumentSelect = document.getElementById("instrument");
  const timeSelect = document.getElementById("time");
  
  if (instrumentSelect) {
    instrumentSelect.disabled = false;
    instrumentSelect.classList.remove("disabled-select");
  }
  
  if (timeSelect) {
    timeSelect.disabled = false;
    timeSelect.classList.remove("disabled-select");
  }
}

let lastScrollTop = 0;
const scrollThreshold = 50; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
let isScrolling = false;
let scrollTimeout;

// Theme management
function initTheme() {
  const themeButtons = document.querySelectorAll('.theme-btn');
  const html = document.documentElement;
  
  // Load saved theme from localStorage
  const savedTheme = localStorage.getItem('theme') || 'default';
  html.setAttribute('data-theme', savedTheme);
  
  // Set active button
  themeButtons.forEach(btn => {
    if (btn.dataset.theme === savedTheme) {
      btn.classList.add('active');
    }
  });

  // Add click handlers
  themeButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const theme = btn.dataset.theme;
      
      // Update theme
      html.setAttribute('data-theme', theme);
      localStorage.setItem('theme', theme);
      
      // Update active button
      themeButtons.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
    });
  });
}

// Initialize theme when DOM is loaded
document.addEventListener('DOMContentLoaded', initTheme);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', function() {
  console.log("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É
  adaptLayout();
  adjustLayout();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—É
  initTheme();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  window.addEventListener('scroll', handleScroll, { passive: true });
  
  // –ü–æ—Å–ª–µ–¥–Ω–∏–º —à–∞–≥–æ–º –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ - –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
  console.log("–ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞...");
  setTimeout(loadTimerState, 300);
  
  // –û—Ç–ª–∞–¥–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
  setInterval(() => {
    if (isSignalActive) {
      const now = Math.floor(Date.now() / 1000);
      const remaining = signalEndTime - now;
      console.log(
        "–°—Ç–∞—Ç—É—Å —Ç–∞–π–º–µ—Ä–∞:", 
        isSignalActive ? "–∞–∫—Ç–∏–≤–µ–Ω" : "–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω", 
        "–û—Å—Ç–∞–ª–æ—Å—å:", remaining, 
        "—Å–µ–∫—É–Ω–¥, –ö–Ω–æ–ø–∫–∞:", 
        document.getElementById("send")?.className || "–Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
      );
    }
  }, 10000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
});

document.addEventListener("DOMContentLoaded", function() {
  console.log("DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI");
  
  const sendButton = document.getElementById("send");
  
  sendButton.addEventListener("click", function() {
    if (isSignalActive) {
      // –í–º–µ—Å—Ç–æ alert —Å–¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –º–∏–≥–∞—é—â–µ–π –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ü–∏–∏, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å
      const button = this;
      button.classList.add("shaking");
      
      // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
      setTimeout(() => {
        button.classList.remove("shaking");
      }, 500);
      return;
    }

    const button = this;
    button.disabled = true;
    button.textContent = "üîÑ –ê–Ω–∞–ª–∏–∑...";
    button.classList.add("analyzing");

    setTimeout(() => {
      generateSignal(button);
    }, 2000);
  });

  function generateSignal(button) {
    const timeSelect = document.getElementById("time");
    const duration = getDurationInSeconds(timeSelect.value);
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
    disableSelects();
    
    // –§–∏–∫—Å–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª
    const isBuy = Math.random() > 0.5;
    const signalType = isBuy ? "–ü–û–ö–£–ü–ö–ê" : "–ü–†–û–î–ê–ñ–ê";
    const accuracy = (80 + Math.random() * 15).toFixed(2);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateSignalDisplay(signalType, accuracy, isBuy);

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
    startCountdown(button, duration);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
    saveTimerState(signalType, accuracy, isBuy, duration);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    tg.sendData(JSON.stringify({
      instrument: document.getElementById("instrument").value,
      time: "1 –º–∏–Ω—É—Ç–∞", // –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º "1 –º–∏–Ω—É—Ç–∞"
      signal: signalType,
      accuracy: `${accuracy}%`,
      duration: duration
    }));

    isSignalActive = true;
  }

  function getDurationInSeconds(timeStr) {
    // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 60 —Å–µ–∫—É–Ω–¥ (1 –º–∏–Ω—É—Ç–∞) –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    return 60;
  }

  function updateSignalDisplay(signalType, accuracy, isBuy) {
    document.getElementById("instrumentDisplay").textContent = 
      document.getElementById("instrument").value;
    document.getElementById("signalType").textContent = signalType;
    document.getElementById("signalType").className = `signal-type ${isBuy ? 'buy' : 'sell'}`;
    document.getElementById("timeDisplay").textContent = "1 –º–∏–Ω—É—Ç–∞"; // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "1 –º–∏–Ω—É—Ç–∞"
    document.getElementById("accuracyDisplay").textContent = `${accuracy}%`;
    
    document.getElementById("loading").style.display = "none";
    document.getElementById("signalResult").style.display = "block";
  }

  function startCountdown(button, duration) {
    console.log("–ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞", duration, "—Å–µ–∫—É–Ω–¥");
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
    if (currentTimer) {
      clearInterval(currentTimer);
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
    button.classList.remove("analyzing");
    button.classList.add("disabled");
    button.disabled = false; // –ù—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã CSS
    
    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä (–Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π)
    if (!isSignalActive) {
      signalEndTime = Math.floor(Date.now() / 1000) + duration;
    }
    
    let remaining = duration;
    const originalDuration = 60; // –ë–∞–∑–æ–≤–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    const initialProgress = (remaining / originalDuration) * 100;
    button.style.setProperty('--progress', `${initialProgress}%`);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    const formatButtonText = (rem) => {
      const minutes = Math.floor(rem / 60);
      const seconds = rem % 60;
      return `üïí ${minutes}:${seconds.toString().padStart(2, '0')}`;
    };
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
    button.textContent = formatButtonText(remaining);
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log("–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è:", formatButtonText(remaining), "–ü—Ä–æ–≥—Ä–µ—Å—Å:", initialProgress.toFixed(2) + "%");
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    currentTimer = setInterval(() => {
      remaining--;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
      const progress = (remaining / originalDuration) * 100;
      button.style.setProperty('--progress', `${progress}%`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
      button.textContent = formatButtonText(remaining);
      
      // –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
      if (remaining <= 0) {
        console.log("–¢–∞–π–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω");
        clearInterval(currentTimer);
        resetButton(button);
        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
        clearTimerState();
      }
    }, 1000);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —Ç–∞–π–º–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω
    isSignalActive = true;
  }

  function resetButton(button) {
    console.log("–°–±—Ä–æ—Å –∫–Ω–æ–ø–∫–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ");
    
    if (currentTimer) {
      clearInterval(currentTimer);
      currentTimer = null;
    }
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
    enableSelects();
    
    button.classList.remove("disabled");
    button.style.removeProperty('--progress');
    button.textContent = "–ü–û–õ–£–ß–ò–¢–¨ –°–ò–ì–ù–ê–õ";
    isSignalActive = false;
  }
});

function adjustLayout() {
    const windowHeight = window.innerHeight;
    const appContainer = document.querySelector('.app-container');
    
    if (windowHeight < 700) {
      appContainer.style.padding = '10px 0';
    } else {
      appContainer.style.padding = '20px';
    }
  }
  
  // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  window.addEventListener('load', adjustLayout);
  window.addEventListener('resize', adjustLayout);

function adjustLayout() {
    const windowHeight = window.innerHeight;
    const content = document.querySelector('.content-wrapper');
    const bottomBar = document.querySelector('.bottom-bar');
    
    if (windowHeight < 650) {
      content.style.padding = '10px';
      content.style.justifyContent = 'flex-start';
    } else {
      content.style.padding = '20px';
      content.style.justifyContent = 'center';
    }
    
    // –í—Å–µ–≥–¥–∞ –ø—Ä–∏–∂–∏–º–∞–µ–º –ø–æ–ª–æ—Å—É –∫ –Ω–∏–∑—É
    bottomBar.style.bottom = '0';
  }

function adaptLayout() {
    const vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (window.innerHeight < 500) {
      document.body.style.padding = '5px';
    } else {
      document.body.style.padding = '10px';
    }
  }

const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Ç–∞—á-—É—Å—Ç—Ä–æ–π—Å—Ç–≤
if (isMobile) {
  document.body.classList.add('touch-device');
  
  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–ø–æ–≤
  document.addEventListener('touchend', function(e) {
    if (e.target.id === 'send') {
      e.preventDefault();
      e.target.click();
    }
    
  }, { passive: false });

if (window.Telegram && Telegram.WebApp) {
    // –£—á–µ—Ç –æ–±–ª–∞—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –º–æ–±–∏–ª—å–Ω–æ–º Telegram
    const viewport = document.querySelector('meta[name=viewport]');
    const viewportContent = viewport.getAttribute('content');
    viewport.setAttribute('content', viewportContent + ', viewport-fit=cover');
    
    // –ü–æ–¥—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram
    document.documentElement.style.setProperty('--tg-viewport-height', `${window.innerHeight}px`);
  }

function displayInstrument(instrument) {
    const display = document.getElementById("instrumentDisplay");
    
    // –î–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å "/" (EUR/USD)
    if (instrument.includes('/')) {
      const [first, second] = instrument.split('/');
      display.innerHTML = `${first}<span class="slash">/</span>${second}`;
    } 
    // –î–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑ "/" (BTC)
    else {
      display.textContent = instrument;
    }
    
  }
}

document.getElementById("instrumentDisplay").innerHTML = 
  instrument.split('/').join('<span>/</span>');
  

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  window.addEventListener('load', adaptLayout);
  window.addEventListener('resize', adaptLayout);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
function handleScroll() {
    const currentScroll = window.pageYOffset || document.documentElement.scrollTop;
    const timerContainer = document.querySelector('.timer-container');
    const bottomBar = document.querySelector('.bottom-bar');
    const botHeader = document.querySelector('.bot-header');

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    const scrollingDown = currentScroll > lastScrollTop;
    const scrollingUp = currentScroll < lastScrollTop;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –ø—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ –¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    if (Math.abs(currentScroll - lastScrollTop) > scrollThreshold) {
        if (scrollingDown) {
            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑ - —Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–æ—Å–∫—É –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
            timerContainer?.classList.add('hidden');
            bottomBar?.classList.add('hidden');
            botHeader?.classList.add('hidden');
        } else if (scrollingUp) {
            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–æ—Å–∫—É –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
            timerContainer?.classList.remove('hidden');
            bottomBar?.classList.remove('hidden');
            botHeader?.classList.remove('hidden');
        }
        
        lastScrollTop = currentScroll;
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å–æ–±—ã—Ç–∏–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    clearTimeout(scrollTimeout);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    scrollTimeout = setTimeout(() => {
        isScrolling = false;
        // –ï—Å–ª–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–æ—Å–∫—É –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        timerContainer?.classList.remove('hidden');
        bottomBar?.classList.remove('hidden');
        botHeader?.classList.remove('hidden');
    }, 300); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
window.addEventListener('scroll', handleScroll, { passive: true });

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    const timerContainer = document.querySelector('.timer-container');
    const bottomBar = document.querySelector('.bottom-bar');
    const botHeader = document.querySelector('.bot-header');
    
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–∏–¥–Ω—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    timerContainer?.classList.remove('hidden');
    bottomBar?.classList.remove('hidden');
    botHeader?.classList.remove('hidden');
});
